#!/bin/bash
set -e # Exit on any child process error
VERSION=$(node -p "require('./package').version")

printf "Awaiting publish of version %s before starting Docker deploy\n" "$VERSION"
while [ "$(npm info . version)" != "$VERSION" ]; do
    printf "."
    sleep 1
done
printf "\n%s available!\n\n" "$VERSION"

echo "Deploying: awsudo/awsudo"

LATEST_NODE_LTS=iron

echo "Publishing tags specific to node LTS releases..."
for NODE_LTS in "hydrogen" "iron"; do
    docker build --build-arg node_lts="$NODE_LTS" --build-arg version="$VERSION" . \
        -t awsudo/awsudo:"$NODE_LTS" \
        -t awsudo/awsudo:v"${VERSION}"-"$NODE_LTS"

    printf "Pushing awsudo/awsudo:%s\n" ${NODE_LTS}
    docker push awsudo/awsudo:"${NODE_LTS}"

    printf "Pushing awsudo/awsudo:v%s-%s\n" "${VERSION}" ${NODE_LTS}
    docker push awsudo/awsudo:v"${VERSION}-${NODE_LTS}"

    if [ "$NODE_LTS" = "$LATEST_NODE_LTS" ]; then
        echo "Building sliding version tags (latest & v${VERSION})..."

        docker build --build-arg node_lts="$NODE_LTS" --build-arg version="$VERSION" . \
            -t awsudo/awsudo:latest \
            -t awsudo/awsudo:v"${VERSION}"

        echo "Pushing awsudo/awsudo:latest"
        docker push awsudo/awsudo:latest

        printf "Pushing awsudo/awsudo:v%s\n" "${VERSION}"
        docker push awsudo/awsudo:v"${VERSION}"
    fi
done

echo "All done!"
